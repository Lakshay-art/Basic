{"version":3,"sources":["components/Propsreciever.js","components/Sendingprops.js","App.js","reportWebVitals.js","index.js"],"names":["Propsreciever","props","useState","state","setState","func","idd","onClick","Sendingprops","textfromchild","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAeeA,EAbO,SAACC,GACnB,MAAsBC,mBAAS,SAA/B,mBAAMC,EAAN,KAAYC,EAAZ,KAGA,OADDH,EAAMI,KAAKF,EAAM,yBAEZ,gCACI,6BAAKF,EAAMK,MADf,IAGK,wBAAQC,QAAS,kBAAIH,EAASH,EAAMK,MAApC,8DCWGE,MAjBf,WACI,MAAsBN,qBAAtB,mBAAMC,EAAN,KAAYC,EAAZ,KAOD,OACI,qCAEA,cAAC,EAAD,CAAeE,IAAI,uBAAuBD,KATvB,SAACI,GAEvBL,EAASK,MAUN,4BAAKN,QCEEO,MAXf,WAGQ,OACI,qBAAKC,UAAU,MAAf,SACL,cAAC,EAAD,OCFQC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.114f08c5.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n//Child\r\nconst Propsreciever = (props) => { //props is recieved here as an object \r\n    const[state,setState]=useState(\"Hello\")//Hello is the assigned to the variable state initially ,setstate is a function used to change the state. \r\n  \r\n   props.func(state+\" NowsentbackfromChild\");//text passed here as argument is recieved by parent;\r\n    return (\r\n        <div>\r\n            <h1>{props.idd}</h1> {/* getting the value of the props with id =\"idd\" */}\r\n             {/* as props.id is javascript so {} is used around it*/}\r\n             <button onClick={()=>setState(props.idd)}>Send data to child and get it back to parent</button>\r\n             {/* adding \"()=>\" infront makes it a callback fuction so that it works only when onclick event occurs. Without it,there will be infinite renders as it eill call itself automatically */}\r\n        </div>\r\n    )\r\n}\r\nexport default Propsreciever;","import React, { useState } from 'react'\r\nimport Propsreciever from './Propsreciever' //have to import the component wher you want to send the data\r\n\r\n//Parent\r\n function Sendingprops() {\r\n     const[state,setState]=useState();\r\n    const functioninparent=(textfromchild)=>{//text recieved here is the argument set for this parameter \"textfromchild\" in child;\r\n    \r\n     setState(textfromchild)\r\n    }\r\n       \r\n  \r\n    return (\r\n        <>\r\n        \r\n        <Propsreciever idd=\"from parent to child\" func={functioninparent}></Propsreciever> \r\n        {/* idd is a prop sent to a component named props reciever */}\r\n        \r\n        <p >{state}</p>\r\n        </>\r\n        )\r\n}export default Sendingprops;\r\n","import './App.css';\n\n\nimport { useState } from 'react';\n\nimport Propsreciever from './components/Propsreciever';\nimport Sendingprops from './components/Sendingprops';\n// import LogIn from './components/LogIn';\n\nfunction App (){\n  \n \n        return (\n            <div className=\"App\">\n       <Sendingprops/>\n    </div>\n          \n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}