{"version":3,"sources":["components/Propsreciever.js","components/Sendingprops.js","components/UseRefuseEffect.js","App.js","reportWebVitals.js","index.js"],"names":["Propsreciever","props","useState","state","setState","func","idd","onClick","Sendingprops","textfromchild","UseRefuseEffect","setstate","cityRef","useRef","useEffect","console","log","document","getElementById","innerHTML","HideName","$","animate","left","ShowName","Jumbotron","id","className","style","width","padding","margin","marginBottom","borderRadius","position","top","height","zIndex","minWidth","Form","inline","onSubmit","e","preventDefault","current","value","slice","toUpperCase","FormControl","type","placeholder","href","ref","Button","Row","Col","textAlign","fontSize","class","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"iNAeeA,EAbO,SAACC,GACnB,MAAsBC,mBAAS,SAA/B,mBAAMC,EAAN,KAAYC,EAAZ,KAGA,OADDH,EAAMI,KAAKF,EAAM,yBAEZ,gCACI,6BAAKF,EAAMK,MADf,IAGK,wBAAQC,QAAS,kBAAIH,EAASH,EAAMK,MAApC,8DCWGE,MAjBf,WACI,MAAsBN,qBAAtB,mBAAMC,EAAN,KAAYC,EAAZ,KAOD,OACI,qCAEA,cAAC,EAAD,CAAeE,IAAI,uBAAuBD,KATvB,SAACI,GAEvBL,EAASK,MAUN,4BAAKN,Q,iECbE,SAASO,IAEpB,MAA0BR,mBAAS,OAAnC,mBAAOC,EAAP,KAAcQ,EAAd,KAEOC,EAAQC,mBAEfC,qBAAU,WACNC,QAAQC,IAAIb,MAGhBW,qBAAU,WACNC,QAAQC,IAAIb,KACd,IAEFW,qBAAU,WACNG,SAASC,eAAe,MAAMC,UAA9B,mDAAqFhB,EAArF,YAGJ,IAMMiB,EAAW,WAEbC,IAAE,YAAYC,QAAQ,CAACC,KAAK,QAAS,MAGnCC,EAAW,WAEbH,IAAE,YAAYC,QAAQ,CAACC,KAAK,OAAQ,MAMxC,OAJAT,qBAAU,WAENU,MACF,IAEE,qCACA,cAACC,EAAA,EAAD,CAAWC,GAAG,UAAUC,UAAU,SAASC,MAAO,CAAEC,MAAM,MAAOC,QAAS,MAAOC,OAAQ,OAAOC,aAAa,OAAQC,aAAc,OAAQC,SAAU,QAAQC,IAAI,MAAMZ,KAAK,OAAOa,OAAO,QAASC,OAAQ,MAAMC,SAAS,SAA1N,SACA,eAACC,EAAA,EAAD,CAAMC,QAAM,EAACb,UAAU,WAAWC,MAAO,CAAEC,MAAM,OAAQY,SAtB/C,SAACC,GACXA,EAAEC,iBACwB,IAAvB/B,EAAQgC,QAAQC,OACnBlC,EAASC,EAAQgC,QAAQC,MAAMC,MAAM,EAAE,GAAGC,eAC1C3B,KAkBA,UACI,cAAC4B,EAAA,EAAD,CAAatB,GAAG,UAAUuB,KAAK,OAAOC,YAAY,KAAKC,KAAK,IAAIxB,UAAU,SAASC,MAAO,CAAEK,aAAc,QAAUmB,IAAKxC,IACzH,cAACyC,EAAA,EAAD,CAAQJ,KAAK,SAAStB,UAAU,oBAChC,eAAC2B,EAAA,EAAD,CAAK1B,MAAO,CAACG,OAAO,QAApB,UAA6B,eAACwB,EAAA,EAAD,CAAK3B,MAAO,CAACE,QAAQ,OAArB,cAA8B,oBAAIF,MAAO,CAAC4B,UAAU,SAAS3B,MAAM,MAAMC,QAAQ,OAAnD,qBAC3D,cAACyB,EAAA,EAAD,CAAM3B,MAAO,CAACE,QAAQ,OAAtB,SAA8B,cAACuB,EAAA,EAAD,CAAQJ,KAAK,SAAUrB,MAAO,CAAC6B,SAAS,OAAO3B,QAAQ,OAAvD,0BAMtC,wBAAQJ,GAAG,KAAKuB,KAAK,SAASS,MAAM,gDAAgDnD,QAASiB,OChClFmC,MAbf,WAGQ,OACI,sBAAKhC,UAAU,MAAf,UAEL,cAAC,EAAD,IACA,cAACjB,EAAD,CAAiBgD,MAAM,gBCLfE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtD,SAASC,eAAe,SAM1B0C,M","file":"static/js/main.56a0e508.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n//Child\r\nconst Propsreciever = (props) => { //props is recieved here as an object \r\n    const[state,setState]=useState(\"Hello\")//Hello is the assigned to the variable state initially ,setstate is a function used to change the state. \r\n  \r\n   props.func(state+\" NowsentbackfromChild\");//text passed here as argument is recieved by parent;\r\n    return (\r\n        <div>\r\n            <h1>{props.idd}</h1> {/* getting the value of the props with id =\"idd\" */}\r\n             {/* as props.id is javascript so {} is used around it*/}\r\n             <button onClick={()=>setState(props.idd)}>Send data to child and get it back to parent</button>\r\n             {/* adding \"()=>\" infront makes it a callback fuction so that it works only when onclick event occurs. Without it,there will be infinite renders as it eill call itself automatically */}\r\n        </div>\r\n    )\r\n}\r\nexport default Propsreciever;","import React, { useState } from 'react'\r\nimport Propsreciever from './Propsreciever' //have to import the component wher you want to send the data\r\n\r\n//Parent\r\n function Sendingprops() {\r\n     const[state,setState]=useState();\r\n    const functioninparent=(textfromchild)=>{//text recieved here is the argument set for this parameter \"textfromchild\" in child;\r\n    \r\n     setState(textfromchild)\r\n    }\r\n       \r\n  \r\n    return (\r\n        <>\r\n        \r\n        <Propsreciever idd=\"from parent to child\" func={functioninparent}></Propsreciever> \r\n        {/* idd is a prop sent to a component named props reciever */}\r\n        \r\n        <p >{state}</p>\r\n        </>\r\n        )\r\n}export default Sendingprops;\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport {Jumbotron,Button,FormControl,Form,Row,Col} from 'react-bootstrap'\r\nimport Propsreciever from './Propsreciever'\r\nimport $ from 'jquery'\r\n\r\nexport default function UseRefuseEffect() {\r\n    \r\n    const [state, setstate] = useState(\"^o^\")\r\n    \r\n     const cityRef=useRef();//declaring an useRef;\r\n\r\n    useEffect(() => {//this useEffect prints the state in console every time the state is changed automatically\r\n        console.log(state);\r\n    })\r\n\r\n    useEffect(() => {//this useEffect prints the state in console only first time(initial value) .it prints \"undefined\" because at start the input is null(empty)\r\n        console.log(state);\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        document.getElementById(\"ff\").innerHTML= `<h5 style={{padding:\"1px\",margin:\"0px\"}}>${state}</h5>`\r\n    })\r\n\r\n    const submitt=(e)=>{\r\n        e.preventDefault();\r\n        if(cityRef.current.value!=\"\")\r\n        setstate(cityRef.current.value.slice(0,2).toUpperCase())\r\n        HideName();\r\n    }\r\n    const HideName = ()=>{\r\n      //  $('#useName').animate({left:\"20%\"}, 100);\r\n        $('#useName').animate({left:\"103%\"}, 800);\r\n      //  $('#useName').focus()\r\n    }\r\n    const ShowName = ()=>{\r\n       // $('#useName').animate({left:\"33%\"}, 800);\r\n        $('#useName').animate({left:\"27%\"}, 800);\r\n    }\r\n    useEffect(()=>{\r\n        \r\n        ShowName()\r\n    },[])\r\n    return (\r\n        <>\r\n        <Jumbotron id=\"useName\" className=\"shadow\" style={{ width:\"30%\", padding: \"4px\", margin: \"auto\",marginBottom:\"20px\", borderRadius: \"30px\", position: \"fixed\",top:\"50%\",left:\"-40%\",height:\"100px\" ,zIndex: \"101\",minWidth:\"150px\" }}>\r\n        <Form inline className=' mx-auto' style={{ width:\"70%\"}} onSubmit={submitt} >\r\n            <FormControl id=\"searchf\" type='text' placeholder='..' href=\"#\" className='w-100 ' style={{ borderRadius: \"25px\" }} ref={cityRef} />\r\n            <Button type='submit' className='invisible w-100'></Button>\r\n            <Row style={{margin:\"auto\"}}><Col style={{padding:\"2px\"}}> <h4 style={{textAlign:\"center\",width:\"40%\",padding:\"0px\"}}>NAME</h4></Col>\r\n            <Col  style={{padding:\"2px\"}}><Button type='submit'  style={{fontSize:\"10px\",padding:\"4px\"}}>;)</Button></Col>\r\n            </Row>\r\n           \r\n            \r\n        </Form>\r\n    </Jumbotron>\r\n    <button id=\"ff\" type=\"button\" class=\"btn btn-secondary btn-sm rounded-pill ml-auto\" onClick={ShowName}>\r\n        \r\n          </button>\r\n    \r\n    </>\r\n    )\r\n}\r\n","import './App.css';\n\n\nimport { useState } from 'react';\n\nimport Propsreciever from './components/Propsreciever';\nimport Sendingprops from './components/Sendingprops';\nimport UseRefuseEffect from './components/UseRefuseEffect';\n// import LogIn from './components/LogIn';\n\nfunction App (){\n  \n \n        return (\n            <div className=\"App\">\n               \n       <Sendingprops/> \n       <UseRefuseEffect class=\"useName\"/>\n    </div>\n          \n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}